# Use dorado basecaller, telling it to SUP basecall and all-context 5mC methylation basecall
# This gives you a bam file containing MM and ML methylation tags (it is referred to as a "modbam")
# Then, give this modbam to samtools to convert it to a fastq whilst retaining MM and ML tags (-TMM,ML), then pipe this fastq to minimap to map it to your Flye assembly of the respective genotype (e.g., Rm).
samtools fastq -TMM,ML ./pod5_oliver_clover_all/basecalls_Rm_pod5_2024_barcoded.bam | minimap2 -x map-ont -a -t 64 -y --secondary=no ./flye_output_post_porechop/Rm_dorado_porechopped_assembly/assembly.fasta - > Rm_mapped_to_RmFlyeAssembly.bam

# Alternatively, you can carry all the tags from the bam file:
samtools fastq -T '*' ./pod5_oliver_clover_all/basecalls_Rm_pod5_2024_barcoded.bam | minimap2 -x map-ont -a -t 64 -y --secondary=no ./flye_output_post_porechop/Rm_dorado_porechopped_assembly/assembly.fasta - > Rm_mapped_to_RmFlyeAssembly.bam

# Then use modbam2bed to convert mapped modbam file to a bedfile
samtools sort Rm_mapped_to_RmFlyeAssembly.bam > Rm_mapped_to_RmFlyeAssembly_sorted.bam
samtools index Rm_mapped_to_RmFlyeAssembly_sorted.bam
../modbam2bed/modbam2bed ../flye_output_post_porechop/Rm_dorado_porechopped_assembly/assembly.fasta Rm_mapped_to_RmFlyeAssembly_sorted.bam

# I am unsure how this is different from making bedMethyl table using modkit pileup...

# Once you have your bedMethyl tables, you can use the following to get a BEDGRAPH file (info taken from https://nanoporetech.com/document/ligation-sequencing-gdna-rrms)
# Filter reference CpG positions without canonical or modified calls (e.g. deletions from the reference) and genomic positions without calls from both strands
cat {prefix}_cpg.acc.bed | csvtk filter2 -H -t -f '$11 != "nan" && $6 != "+" && $6 != "-"' > {out_mod_bed_agg_filt}

# Convert the BEDMETHYL file to a BEDGRAPH file that will be used for obtaining the BIGWIG format useful for IGV visualisation
awk -v OFS='\t' '{print $1,$2,$3,$11}' {out_mod_bed_agg_filt} | sort -k1,1 -k2,2n > {out_mod_bed_agg_filt_bedgraph} bedGraphToBigWig {out_mod_bed_agg_filt_bedgraph} {reference_chrSize} {out_mod_bed_agg_filt_bigwig} 


### For Rl (R9 chemistry):
# First index your flye (post-porechop) assembly with minimap2
minimap2 assembly_Rl.fasta -d assembly_Rl_fasta.idx -I 1.6GB

# Then call guppy, pointing towards your indexed assembly (this needs to be called whilst in the virtual desktop in OnDemand)
ont-guppy/bin/guppy_basecaller --input_path ~/testdir_purple_Rl_fast5s/ --save_path ./test_guppy_output/ --config ./ont-guppy/data/res_dna_r941_min_modbases-all-context_v001.cfg --align_ref ./flye_output_post_porechop/Rl_dorado_porechopped_assembly/assembly_Rl_fasta.idx --bam_out --num_callers 64
