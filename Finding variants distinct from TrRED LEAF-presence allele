# Mapping green SUP edges_14743 and edge_14745, and purple edge_14344, to purple edge_4556 (TrRED LEAF-presence allele)
vulcan -r ../purple/all_purple_SUP_called_merged/flye_assembly_purple/misc_edges/edge_4556_purple_SUP_assembly.fasta -i Green_SUP_edges_14743_14745_purple_edge_14344.fasta -w ../vulcan_alignment_of_green_alleles_to_purple_edge_4556/ -o alignment_of_green_ROIs_against_purple_edge_4556 -t 64 -any

# This didn't work

# So I decided to map all four TrRED LEAF-absent alleles from Green F2 Flye assemble (edges: ), 
# and all the two TrRED LEAF-absent alleles from the T.pal subgenome of the Purple F2 Flye assembly, to Purple edge_14344.
# This is so I can look for variants that are unique to the two T.occ Green green alleles and the Purple T.occ TrRED LEAF-absent allele 

vulcan -r [REFERENCE FASTA] -i [MAPPING FASTA 1] [MAPPING FASTA 2] -w [WORKING DIRECTORY] -o [NAME OF OUTPUT ALIGNMENT] -t 64 -any
vulcan -r NODE_edge_14344_Purple_Tocc_with_second_draft_screening_primers.fasta -i NODE_edge_13191_Purple_Tpal_extraction_upstream_and_inc_ADP.fasta NODE_edge_14743_Green_Tocc_extraction_upstream_and_inc_ADP.fasta NODE_edge_14745_Green_Tocc_extraction_upstream_and_inc_ADP_reversed.fasta NODE_edge_25971_Green_Tpal_extraction_upstream_and_inc_ADP_reversed.fasta NODE_edge_25974_Green_Tpal_extraction_upstream_and_inc_ADP_reversed.fasta NODE_edge_4556_Purple_Tocc_extraction_upstream_and_inc_ADP_reversed.fasta NODE_edge_4305_Purple_Tpal_extraction_upstream_and_inc_ADP.fasta -w ./hunting_TrREDabsent_alleles_in_longread_assemblies/ -o mapping_all_upstream_and_inc_ADP_to_Purple_edge_14344 -t 64 -any

# This also wasn't that informative

blat [REFERENCE/SUBJECT FASTA] [QUERY FASTA] Blat_output.psl

REF=reffasta.fa
QUERY=queryfasta.fa
RESULT=outputbase
blat $REF $QUERY $RESULT.pslx -out=pslx -noTrimA -extendThroughN && psl2sam.pl $RESULT.pslx | python add_seq_info_to_psl2sam.py $QUERY | samtools view -bST $REF - > $RESULT.bam && samtools sort $RESULT.bam $RESULT.sorted && samtools index $RESULT.sorted.bam

# This didn't work


# Then I decided to map all SUP-called reads (green and purple longread data) to Purple Flye-assembled edge_14344, with the presumption that the ND4-intergenic region junction in this edge represents the TrRED LEAF deletion 
vulcan -r ../purple/all_purple_SUP_called_merged/flye_assembly_purple/misc_edges/edge_14344_purple_SUP_assembly.fasta -i ../green/all_green_SUP_called_merged/all_green_SUP_called_passed_merged.fastq.gz -w ./ -o vulcan_mapping_green_SUPreads_to_purple_edge14344 -t 64 -ont
# Returned the following error; 
2024-03-25 15:58:15,460 - root - ERROR - work path already exists!
Traceback (most recent call last):
  File "/Volumes/archive/userdata/student_users/olivernewman/.conda/envs/vulcan/bin/vulcan", line 302, in main
    os.mkdir(WORK_DIR)
FileExistsError: [Errno 17] File exists: './'

# But then continued mapping reads... It was probably just due to the fact that I specified the working dir as ./ (-w ./)

# Then I needed to make a .vcf file for these two .bam files

cuteSV ALIGNMENT.bam ~/2023/Reference_genomes/Trifolium_repens/UTM_Trep_v1.0_hap1/ncbi_dataset/data/GCA_030914245.1/GCA_030914245.1_UTM_Trep_v1.0_hap1_genomic.fna output_cuteSV_green_against_UTM_hap1 ./ --threads 64 --max_cluster_bias_INS 100 --diff_ratio_merging_INS 0.3 --max_cluster_bias_DEL 100 --diff_ratio_merging_DEL 0.3samtools sort vulcan_green_SUP_against_UTM_Trepv1hap1_90.bam > vulcan_green_SUP_against_UTM_Trepv1hap1_90_sorted.bam
cuteSV <sorted.bam> <reference.fa> <output.vcf> <work_dir> --threads 64 --max_cluster_bias_INS 100 --diff_ratio_merging_INS 0.3 --max_cluster_bias_DEL 100 --diff_ratio_merging_DEL 0.3samtools sort vulcan_green_SUP_against_UTM_Trepv1hap1_90.bam > vulcan_green_SUP_against_UTM_Trepv1hap1_90_sorted.bam
